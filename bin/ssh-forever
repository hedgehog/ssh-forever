#!/usr/bin/env ruby

$:.unshift File.join(File.dirname(__FILE__), '..', 'lib')
require 'ssh-forever'
require 'optparse'

banner = %{Usage: ssh-forever username@yourserver.com [options]

More info:
  https://github.com/mattwynne/ssh-forever
}

options = {}
OptionParser.new do |opts|
  opts.banner = banner
  opts.on('-a', '--auto', "Run without prompting.") do |boolean|
    options[:auto] = boolean
  end

  opts.on('-d', '--debug', "Run SSH verbosely.") do |boolean|
    options[:debug] = boolean
  end

  opts.on('-l', '--login', "Open SSH connection and stay logged in.") do |boolean|
    options[:login] = true
  end

   opts.on('-p', '--port [PORT]', Integer, "SSH server port.") do |port|
    options[:port] = port
  end

  opts.on('-i', '--identity_file [FILE]', String, "SSH identity file path (no .pub).") do |identity_file|
    options[:identity_file] = identity_file
  end

  opts.on('-n', '--name [NAME]', String, "SSH host name alias you wish to use.") do |name|
    options[:name] = name
  end

  opts.on('-q', '--quiet', "Run without output.") do |boolean|
    options[:quiet] = true
    options[:debug] = false
  end

  opts.on('-s', '--strict', "SSH with stricthostkeychecking=yes (default=no)") do |boolean|
    options[:strict] = boolean
  end

end.parse!

login = ARGV[0]

if login.nil?
  puts banner + "  ssh-forever --help\n"
  exit 1
end

SshForever::SecureShellForever.new(login, options).run
